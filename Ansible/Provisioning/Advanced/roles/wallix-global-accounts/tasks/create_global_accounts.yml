---
# Global domain accounts creation tasks

- name: Get existing global domains for account creation
  uri:
    url: "{{ wallix_api.base_url }}/domains"
    method: GET
    headers:
      Cookie: "{{ wallix_session_cookie }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl }}"
    timeout: "{{ wallix_auth.connection.timeout }}"
    status_code: [200]
    return_content: yes
  register: existing_domains_for_accounts
  when: wallix_global_accounts_mode != 'dry_run'

- name: Create global domain accounts
  uri:
    url: "{{ wallix_api.base_url }}/domains/{{ domain_id }}/accounts"
    method: POST
    headers:
      Cookie: "{{ wallix_session_cookie }}"
      Content-Type: "application/json"
    body_format: json
    body:
      account_name: "{{ item.account_name }}"
      account_login: "{{ item.account_login }}"
      description: "{{ item.description | default('') }}"
      auto_change_password: "{{ item.auto_change_password | default(false) }}"
      auto_change_ssh_key: "{{ item.auto_change_ssh_key | default(false) }}"
      checkout_policy: "{{ item.checkout_policy | default('default') }}"
      credentials: "{% if item.credentials is defined %}{{ item.credentials if item.credentials is iterable and item.credentials is not string and item.credentials is not mapping else [item.credentials] }}{% else %}[]{% endif %}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl }}"
    timeout: "{{ wallix_auth.connection.timeout }}"
    status_code: [200, 201, 204, 409]  # 409 = already exists
    return_content: yes
  loop: "{{ wallix_global_accounts.accounts | default([]) }}"
  vars:
    # Find the domain ID for this account
    target_domain: "{{ existing_domains_for_accounts.json | selectattr('domain_name', 'equalto', item.domain_name) | list | first | default({}) }}"
    domain_id: "{{ target_domain.domain_name | default(item.domain_name) }}"  # API accepts domain name or ID
  when: 
    - item.state | default('present') == 'present'
    - wallix_global_accounts_mode != 'dry_run'
    - existing_domains_for_accounts.json is defined
    - target_domain | length > 0  # Domain must exist
  register: global_account_creation_results
  no_log: false

- name: Debug global account creation results
  debug:
    msg:
      - "Account: {{ item.item.account_name }}@{{ item.item.domain_name }}"
      - "Login: {{ item.item.account_login }}"
      - "Status: {{ item.status }}"
      - "Result: {{ 'Created' if item.status in [200, 201, 204] else 'Already exists' if item.status == 409 else 'Error' }}"
  loop: "{{ global_account_creation_results.results | default([]) | selectattr('status', 'defined') | list }}"
  when: 
    - global_account_creation_results.results is defined
    - global_account_creation_results.results | selectattr('status', 'defined') | list | length > 0

- name: Set global accounts creation status
  set_fact:
    wallix_global_accounts_created: "{{ global_account_creation_results.results | default([]) | selectattr('status', 'defined') | selectattr('status', 'in', [200, 201, 204]) | list | length }}"
    wallix_global_accounts_existing: "{{ global_account_creation_results.results | default([]) | selectattr('status', 'defined') | selectattr('status', 'equalto', 409) | list | length }}"
    wallix_global_accounts_status: "success"
  when: global_account_creation_results.results is defined

- name: Display global accounts creation summary
  debug:
    msg:
      - "âœ… Global domain accounts management completed successfully"
      - "Created: {{ wallix_global_accounts_created | default(0) }}"
      - "Already existing: {{ wallix_global_accounts_existing | default(0) }}"
      - "Note: Global accounts are now available in their respective domains"