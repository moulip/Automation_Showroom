---
# Configure services for WALLIX devices

- name: Get existing devices for service creation
  uri:
    url: "{{ wallix_api.base_url }}/devices"
    method: GET
    headers:
      Cookie: "{{ wallix_session_cookie }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl }}"
    timeout: "{{ wallix_auth.connection.timeout }}"
    status_code: [200]
    return_content: yes
  register: existing_devices_for_services
  when: wallix_device_services | default([]) | length > 0

- name: Create services for devices
  uri:
    url: "{{ wallix_api.base_url }}/devices/{{ existing_devices_for_services.json | selectattr('device_name', 'equalto', item.device_name) | map(attribute='id') | first }}/services"
    method: POST
    headers:
      Cookie: "{{ wallix_session_cookie }}"
      Content-Type: "application/json"
    body_format: json
    body: |
      {
        "service_name": "{{ item.name }}",
        "protocol": "{{ item.protocol }}",
        "port": {{ item.port }},
        "connection_policy": "{{ item.connection_policy | default('default') }}",
        "subprotocols": {{ item.subprotocols | default(['SSH_SHELL_SESSION']) | to_json }}
      }
    validate_certs: "{{ wallix_auth.connection.verify_ssl }}"
    timeout: "{{ wallix_auth.connection.timeout }}"
    status_code: [200, 201, 204, 409]
    return_content: yes
  register: service_creation_result
  loop: "{{ wallix_device_services | default([]) }}"
  when: 
    - wallix_device_services | default([]) | length > 0
    - item.state | default('present') == 'present'
    - wallix_devices_mode | default('normal') != 'dry_run'

- name: Debug service creation results
  debug:
    msg:
      - "Service: {{ item.item.name }}"
      - "Device: {{ item.item.device_name }}"
      - "Protocol: {{ item.item.protocol }}:{{ item.item.port }}"
      - "Status: {{ item.status }}"
  loop: "{{ service_creation_result.results | default([]) }}"
  when: service_creation_result is defined

- name: Skip service configuration (no services configured)
  debug:
    msg: "⚠️ Service configuration skipped - no services configured"
  when: wallix_device_services | default([]) | length == 0

- name: Set service creation status
  set_fact:
    wallix_services_created: "{{ service_creation_result.results | default([]) | selectattr('status', 'in', [200, 201, 204]) | list | length }}"
    wallix_services_existing: "{{ service_creation_result.results | default([]) | selectattr('status', 'equalto', 409) | list | length }}"
    wallix_services_status: "success"
  when: service_creation_result is defined

- name: Display services creation summary
  debug:
    msg:
      - "✅ Services management completed"
      - "Services created: {{ wallix_services_created | default('0') }}"
      - "Services already existing: {{ wallix_services_existing | default('0') }}"
  when: wallix_device_services | default([]) | length > 0