---
# WALLIX Cleanup Role - Main Tasks

- name: "🧹 Starting WALLIX cleanup operations"
  debug:
    msg:
      - "Starting WALLIX Bastion cleanup"
      - "Mode: {{ wallix_cleanup.operation_mode | default('dry_run') }}"
      - "Confirmation required: {{ wallix_cleanup.require_confirmation | default(true) }}"
      - "Backup enabled: {{ wallix_cleanup.backup_before_delete | default(true) }}"

# Safety validation
- name: "🛡️ Validate cleanup safety settings"
  assert:
    that:
      - >
        (wallix_cleanup.require_confirmation | default(true)) == false or
        (wallix_cleanup.operation_mode | default('dry_run') == 'dry_run') or
        (wallix_cleanup_safety.require_explicit_confirmation | default(true)) == false
    fail_msg: "Cleanup safety validation failed. Either enable confirmation, use dry_run mode, or explicitly disable safety confirmation."
    success_msg: "Safety validation passed"

# Authentication check
- name: "🔐 Verify WALLIX authentication"
  assert:
    that:
      - wallix_session_cookie is defined
      - wallix_api.base_url is defined
    fail_msg: "WALLIX authentication required. Please run wallix-auth role first."
    success_msg: "Authentication verified"

# Include confirmation tasks
- name: "⚠️ Confirmation check"
  include_tasks: confirm_cleanup.yml
  when: 
    - wallix_cleanup.require_confirmation | default(true)
    - wallix_cleanup.operation_mode | default('dry_run') != 'dry_run'

# Include discovery tasks
- name: "🔍 Discover resources to cleanup"
  include_tasks: discover_resources.yml

# Include backup tasks
- name: "💾 Backup current configuration"
  include_tasks: backup_resources.yml
  when: wallix_cleanup_backup.enabled | default(true)

# Include cleanup tasks in dependency order
- name: "🗑️ Cleanup authorizations"
  include_tasks: cleanup_authorizations.yml
  when: wallix_cleanup_components.authorizations.enabled | default(false)

- name: "🗑️ Cleanup target groups"
  include_tasks: cleanup_target_groups.yml
  when: wallix_cleanup_components.target_groups.enabled | default(false)

- name: "🗑️ Cleanup user groups"
  include_tasks: cleanup_user_groups.yml
  when: wallix_cleanup_components.user_groups.enabled | default(false)

- name: "🗑️ Cleanup global accounts"
  include_tasks: cleanup_global_accounts.yml
  when: wallix_cleanup_components.global_accounts.enabled | default(false)

- name: "🗑️ Cleanup local accounts"
  include_tasks: cleanup_local_accounts.yml
  when: wallix_cleanup_components.devices.enabled | default(false)

- name: "🗑️ Cleanup devices"
  include_tasks: cleanup_devices.yml
  when: wallix_cleanup_components.devices.enabled | default(false)

- name: "🗑️ Cleanup users"
  include_tasks: cleanup_users.yml
  when: wallix_cleanup_components.users.enabled | default(false)

- name: "🗑️ Cleanup global domains"
  include_tasks: cleanup_global_domains.yml
  when: wallix_cleanup_components.global_domains.enabled | default(false)

- name: "🗑️ Cleanup domains"
  include_tasks: cleanup_domains.yml
  when: wallix_cleanup_components.domains.enabled | default(false)

# Generate cleanup report
- name: "📊 Generate cleanup report"
  include_tasks: generate_report.yml
  when: wallix_cleanup_reporting.enabled | default(true)

- name: "✅ WALLIX cleanup completed"
  debug:
    msg:
      - "WALLIX cleanup operations completed"
      - "Items processed: {{ wallix_cleanup_stats.total_processed | default(0) }}"
      - "Items deleted: {{ wallix_cleanup_stats.total_deleted | default(0) }}"
      - "Items skipped: {{ wallix_cleanup_stats.total_skipped | default(0) }}"
      - "Errors: {{ wallix_cleanup_stats.total_errors | default(0) }}"