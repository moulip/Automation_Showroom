---
# WALLIX Cleanup - X509 Configuration Reset Tasks
# Resets X509 certificate configuration via /api/config/x509

- name: "Cleanup | X509 | Get current X509 configuration"
  uri:
    url: "{{ wallix_api.base_url }}/api/config/x509"
    method: GET
    headers:
      Cookie: "{{ wallix_session_cookie }}"
    validate_certs: "{{ wallix_api.verify_ssl }}"
    timeout: "{{ wallix_api.timeout }}"
    status_code: [200, 404]
  register: current_x509_config
  changed_when: false
  failed_when: false

- name: "Cleanup | X509 | Check if X509 configuration exists"
  set_fact:
    x509_config_exists: "{{ current_x509_config.status == 200 }}"

- name: "Cleanup | X509 | Debug current X509 configuration"
  debug:
    msg: "Current X509 configuration: {{ current_x509_config.json }}"
  when: 
    - x509_config_exists
    - wallix_cleanup_debug.enabled | default(false)

- name: "Cleanup | X509 | Backup X509 configuration"
  copy:
    content: |
      # WALLIX X509 Configuration Backup
      # Timestamp: {{ ansible_date_time.iso8601 }}
      {{ current_x509_config.json | to_nice_yaml }}
    dest: "{{ wallix_cleanup_backup.directory | default('/tmp') }}/x509_config_backup_{{ ansible_date_time.epoch }}.yml"
    mode: '0600'
  delegate_to: localhost
  when: 
    - x509_config_exists
    - wallix_cleanup_backup.enabled | default(true)

- name: "Cleanup | X509 | Reset X509 configuration to defaults (dry run)"
  debug:
    msg: "Would reset X509 configuration to default values"
  when: 
    - x509_config_exists
    - wallix_cleanup.operation_mode | default('dry_run') == 'dry_run'

- name: "Cleanup | X509 | Reset X509 configuration to defaults"
  uri:
    url: "{{ wallix_api.base_url }}/api/config/x509"
    method: DELETE
    headers:
      Cookie: "{{ wallix_session_cookie }}"
    validate_certs: "{{ wallix_api.verify_ssl }}"
    timeout: "{{ wallix_api.timeout }}"
    status_code: [200, 204, 404]
  register: x509_reset_result
  when: 
    - x509_config_exists
    - wallix_cleanup.operation_mode | default('dry_run') == 'normal'

- name: "Cleanup | X509 | Set cleanup status"
  set_fact:
    wallix_cleanup_stats:
      x509_config:
        found: "{{ x509_config_exists }}"
        cleaned: "{{ x509_reset_result.changed | default(false) }}"
        backed_up: "{{ x509_config_exists and (wallix_cleanup_backup.enabled | default(true)) }}"