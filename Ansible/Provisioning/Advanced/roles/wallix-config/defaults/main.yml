---
# Simplified default variables for wallix-config role
# Focus on core access management settings only

# Basic WALLIX system configuration 
wallix_config:
  # System identification
  system:
    name: "{{ wallix_bastion_name | default(inventory_hostname) }}"
    description: "{{ wallix_bastion_description | default('WALLIX Bastion managed by Ansible') }}"
    
  # Session management basics
  sessions:
    default_timeout: 3600      # 1 hour
    max_concurrent: 100        # Max concurrent sessions
    idle_timeout: 1800         # 30 minutes idle timeout
    
  # Basic security settings  
  security:
    enable_password_policy: true
    min_password_length: 8
    password_complexity: true
    session_recording: true
    audit_enabled: true
    
  # API configuration  
  api:
    timeout: 30
    retry_attempts: 3
    retry_delay: 5
    
  # Feature flags for new endpoints
  manage_x509: false           # Enable X509 certificate configuration
  manage_clusters: false       # Enable cluster target configuration (PAM clusters)
  manage_license_enhanced: false # Enable enhanced license management

# Configuration operation mode
wallix_config_mode: "{{ operation_mode | default('normal') }}"  # normal|dry_run

# Configuration validation
wallix_config_validation:
  check_api_access: true
  validate_basic_settings: true
  test_session_config: true

# Debug settings
wallix_config_debug:
  enabled: "{{ wallix_debug.enabled | default(false) }}"
  level: "{{ wallix_debug.level | default('info') }}"
  log_api_calls: false

# === NEW ENDPOINT CONFIGURATIONS ===

# X509 Certificate Configuration (/api/config/x509)
wallix_x509_config:
  # Certificate validation settings
  certificate_validation_enabled: true
  check_certificate_revocation: true
  
  # Certificate Authority settings
  ca_certificate_path: "/etc/ssl/certs/ca-certificates.crt"
  ca_bundle_enabled: true
  
  # SSL/TLS settings
  ssl_minimum_version: "TLSv1.2"
  ssl_cipher_suites: "ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS"
  
  # Certificate chain settings
  max_certificate_chain_length: 10
  verify_certificate_chain: true
  
  # OCSP settings
  ocsp_enabled: false
  ocsp_responder_timeout: 30
  
  # CRL settings
  crl_enabled: false
  crl_cache_duration: 3600
  
  # Validation settings
  validate_after_change: true
  run_validation_test: false
  test_url: "https://www.google.com"

# Enhanced License Configuration (/api/license)
wallix_license_config:
  # Installation settings
  auto_install: false
  license_file: ""           # Path to license file
  license_content: ""        # Direct license content
  license_name: "Ansible-Managed-License"
  license_description: "License installed by Ansible automation"
  auto_activate: true
  
  # Activation settings
  activate_license: false
  license_key: ""
  force_activation: false
  
  # Monitoring settings
  validate_license: true
  check_expiration: true
  alert_before_expiry_days: 30
  usage_warning_threshold: 80  # Percentage
  
  # Backup settings
  backup_license_info: true

# Cluster Target Configuration (/api/clusters)
# Note: This is for PAM cluster targets (DB clusters, app clusters), NOT HA infrastructure
wallix_cluster_targets: []
# Example configuration:
# wallix_cluster_targets:
#   - cluster_name: "postgres-cluster"
#     cluster_description: "PostgreSQL production cluster"
#     cluster_type: "database"  # database, application, service
#     cluster_endpoints:
#       - host: "pg1.example.com"
#         port: 5432
#         weight: 100
#       - host: "pg2.example.com"
#         port: 5432
#         weight: 100
#     load_balancing_method: "round_robin"  # round_robin, failover, weighted
#     connection_policy: "failover"  # failover, load_balance
#     health_check_enabled: true
#     health_check_interval: 30
#     health_check_timeout: 10
#     health_check_retries: 3
#     max_connections_per_node: 10
#     connection_timeout: 30
#     cluster_domain: "production"
#     authentication_method: "password"
#     update_cluster: false
#     validate_cluster_health: true
#     tags: ["production", "postgresql"]
#     metadata:
#       environment: "production"
#       team: "dba"