---
# WALLIX Config - System Configuration Tasks

- name: "Config | System | Get current system configuration"
  uri:
    url: "{{ wallix_api_base_url }}/api/system/config"
    method: GET
    headers:
      Cookie: "{{ wallix_api_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200]
  register: current_system_config
  changed_when: false

- name: "Config | System | Prepare system configuration payload"
  set_fact:
    system_config_payload:
      system_name: "{{ wallix_system_config.system_name }}"
      description: "{{ wallix_system_config.description | default('') }}"
      timezone: "{{ wallix_system_config.timezone | default('UTC') }}"
      language: "{{ wallix_system_config.language | default('en') }}"
      session_timeout: "{{ wallix_system_config.session_timeout | default(3600) }}"
      max_sessions: "{{ wallix_system_config.max_sessions | default(100) }}"
      audit_log_retention: "{{ wallix_system_config.audit_log_retention | default(365) }}"
      syslog_enabled: "{{ wallix_system_config.syslog_enabled | default(true) }}"
      debug_mode: "{{ wallix_system_config.debug_mode | default(false) }}"

- name: "Config | System | Compare configurations"
  set_fact:
    system_config_changed: "{{ (current_system_config.json | default({})) != system_config_payload }}"

- name: "Config | System | Display configuration changes"
  debug:
    msg:
      - "Current configuration differs from desired state"
      - "Current: {{ current_system_config.json | default({}) }}"
      - "Desired: {{ system_config_payload }}"
  when: 
    - system_config_changed
    - wallix_config.detailed_logging | default(true)

- name: "Config | System | Apply system configuration (dry run)"
  debug:
    msg: "Would update system configuration with: {{ system_config_payload }}"
  when: 
    - system_config_changed
    - wallix_config.operation_mode | default('apply') == 'dry_run'

- name: "Config | System | Apply system configuration"
  uri:
    url: "{{ wallix_api_base_url }}/api/system/config"
    method: PUT
    headers:
      Cookie: "{{ wallix_api_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
      Content-Type: "application/json"
    body: "{{ system_config_payload }}"
    body_format: json
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200, 201, 204]
  register: system_config_result
  when: 
    - system_config_changed
    - wallix_config.operation_mode | default('apply') == 'apply'
  notify: 
    - "Restart WALLIX services"
    - "Generate configuration report"

- name: "Config | System | Configure password policy"
  uri:
    url: "{{ wallix_api_base_url }}/api/system/password-policy"
    method: PUT
    headers:
      Cookie: "{{ wallix_api_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
      Content-Type: "application/json"
    body: "{{ wallix_system_config.password_policy }}"
    body_format: json
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200, 201, 204]
  register: password_policy_result
  when: 
    - wallix_system_config.password_policy is defined
    - wallix_config.operation_mode | default('apply') == 'apply'

- name: "Config | System | Verify system configuration"
  uri:
    url: "{{ wallix_api_base_url }}/api/system/config"
    method: GET
    headers:
      Cookie: "{{ wallix_api_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200]
  register: updated_system_config
  changed_when: false
  when: system_config_result is defined and system_config_result.changed

- name: "Config | System | Set configuration status"
  set_fact:
    wallix_system_config_applied: "{{ system_config_result.changed | default(false) }}"
    wallix_system_config_time: "{{ ansible_date_time.iso8601 }}"