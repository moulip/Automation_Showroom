---
# WALLIX Config - Configuration Backup Tasks

- name: "Config | Backup | Create backup directory"
  file:
    path: "{{ wallix_config_debug.config_backup_dir | default('/tmp/wallix_configs') }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  run_once: true

- name: "Config | Backup | Generate backup filename"
  set_fact:
    config_backup_filename: "wallix_config_backup_{{ inventory_hostname }}_{{ 99999 | random | int }}.json"

- name: "Config | Backup | Get current system configuration"
  uri:
    url: "{{ wallix_bastion_protocol | default('https') }}://{{ wallix_bastion_host }}:{{ wallix_bastion_port | default(443) }}/api/system/config"
    method: GET
    headers:
      Cookie: "{{ wallix_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200]
  register: backup_system_config
  changed_when: false

- name: "Config | Backup | Get current license information"
  uri:
    url: "{{ wallix_api_base_url }}/api/system/license"
    method: GET
    headers:
      Cookie: "{{ wallix_api_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200, 404]
  register: backup_license_config
  changed_when: false
  failed_when: false

- name: "Config | Backup | Get current certificate information"
  uri:
    url: "{{ wallix_api_base_url }}/api/system/certificates"
    method: GET
    headers:
      Cookie: "{{ wallix_api_session_cookie | default('') }}"
      Authorization: "Bearer {{ wallix_api_token | default('') }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(true) }}"
    timeout: "{{ wallix_auth.connection.timeout | default(30) }}"
    status_code: [200, 404]
  register: backup_certificate_config
  changed_when: false
  failed_when: false

- name: "Config | Backup | Prepare backup data"
  set_fact:
    config_backup_data:
      backup_info:
        hostname: "{{ inventory_hostname }}"
        timestamp: "{{ ansible_date_time.iso8601 }}"
        ansible_version: "{{ ansible_version.full }}"
        backup_type: "configuration"
      system_config: "{{ backup_system_config.json | default({}) }}"
      license_config: "{{ backup_license_config.json | default({}) }}"
      certificate_config: "{{ backup_certificate_config.json | default({}) }}"

- name: "Config | Backup | Save configuration backup"
  copy:
    content: "{{ config_backup_data | to_nice_json }}"
    dest: "{{ wallix_config_debug.config_backup_dir | default('/tmp/wallix_configs') }}/{{ config_backup_filename }}"
    mode: '0600'
  delegate_to: localhost

- name: "Config | Backup | Set backup status"
  set_fact:
    wallix_config_backup_created: true
    wallix_config_backup_file: "{{ wallix_config_debug.config_backup_dir | default('/tmp/wallix_configs') }}/{{ config_backup_filename }}"
    wallix_config_backup_time: "{{ ansible_date_time.iso8601 }}"

- name: "Config | Backup | Display backup location"
  debug:
    msg: "Configuration backup saved to: {{ wallix_config_backup_file }}"
  when: wallix_config.detailed_logging | default(true)