---
# WALLIX Config - Report Generation Tasks

- name: "Config | Report | Gather configuration status"
  set_fact:
    config_report_data:
      report_info:
        hostname: "{{ inventory_hostname }}"
        timestamp: "{{ ansible_date_time.iso8601 }}"
        ansible_version: "{{ ansible_version.full }}"
        role: "wallix-config"
        operation_mode: "{{ wallix_config.operation_mode | default('apply') }}"
      
      validation_status:
        config_validated: "{{ wallix_config_validated | default(false) }}"
        validation_time: "{{ wallix_config_validation_time | default('N/A') }}"
      
      backup_status:
        backup_created: "{{ wallix_config_backup_created | default(false) }}"
        backup_file: "{{ wallix_config_backup_file | default('N/A') }}"
        backup_time: "{{ wallix_config_backup_time | default('N/A') }}"
      
      system_config_status:
        applied: "{{ wallix_system_config_applied | default(false) }}"
        timestamp: "{{ wallix_system_config_time | default('N/A') }}"
        config: "{{ wallix_system_config | default({}) }}"
      
      license_status:
        installed: "{{ wallix_license_installed | default(false) }}"
        valid: "{{ wallix_license_valid | default(true) }}"
        days_remaining: "{{ wallix_license_days_remaining | default('unknown') }}"
        check_time: "{{ wallix_license_check_time | default('N/A') }}"
      
      certificate_status:
        web_cert_installed: "{{ wallix_web_cert_installed | default(false) }}"
        certificates_valid: "{{ wallix_certificates_valid | default(true) }}"
        config_time: "{{ wallix_certificates_config_time | default('N/A') }}"
      
      time_config_status:
        applied: "{{ wallix_time_config_applied | default(false) }}"
        synchronized: "{{ wallix_time_synchronized | default(false) }}"
        config_time: "{{ wallix_time_config_time | default('N/A') }}"
      
      network_config_status:
        interfaces_applied: "{{ wallix_network_interfaces_applied | default(false) }}"
        firewall_applied: "{{ wallix_firewall_config_applied | default(false) }}"
        test_passed: "{{ wallix_network_test_passed | default(true) }}"
        config_time: "{{ wallix_network_config_time | default('N/A') }}"
      
      backup_config_status:
        applied: "{{ wallix_backup_config_applied | default(false) }}"
        test_passed: "{{ wallix_backup_test_passed | default(true) }}"
        config_time: "{{ wallix_backup_config_time | default('N/A') }}"

- name: "Config | Report | Generate configuration report filename"
  set_fact:
    config_report_filename: "wallix_config_report_{{ inventory_hostname }}_{{ ansible_date_time.epoch }}.json"

- name: "Config | Report | Save configuration report"
  copy:
    content: "{{ config_report_data | to_nice_json }}"
    dest: "/tmp/{{ config_report_filename }}"
    mode: '0644'
  delegate_to: localhost

- name: "Config | Report | Display report summary"
  debug:
    msg:
      - "Configuration Report Summary:"
      - "=========================="
      - "System Config Applied: {{ wallix_system_config_applied | default(false) }}"
      - "License Status: {{ 'Valid' if wallix_license_valid | default(true) else 'Invalid' }}"
      - "Certificates Installed: {{ wallix_web_cert_installed | default(false) }}"
      - "Time Config Applied: {{ wallix_time_config_applied | default(false) }}"
      - "Network Config Applied: {{ wallix_network_interfaces_applied | default(false) }}"
      - "Backup Config Applied: {{ wallix_backup_config_applied | default(false) }}"
      - "Report saved to: /tmp/{{ config_report_filename }}"
  when: wallix_config.detailed_logging | default(true)

- name: "Config | Report | Set final status"
  set_fact:
    wallix_config_report_generated: true
    wallix_config_report_file: "/tmp/{{ config_report_filename }}"
    wallix_config_completed: true
    wallix_config_completion_time: "{{ ansible_date_time.iso8601 }}"