
### AUTHORIZATION ###
resource "wallix-bastion_authorization" "CustAdm_IT_Bastion01_Autorizations" {
  provider = wallix-bastion.CustAdm-IT-Bastion01
  depends_on = [
    wallix-bastion_targetgroup.CustAdm-IT-Bastion01_Target_Groups,
    wallix-bastion_usergroup.CustAdm_IT_Bastion01_User_Groups
  ]
  # Iterate on all users of custadm-bastion, excludind "itadmin"
  for_each = { for user in local.yaml-Bastion["custadm_bastion_provisionning_users"]["users"] : user => local.yaml-Bastion["all_users"][user]
  }
  authorization_name = "${terraform.workspace}-${each.value.user_name}-${local.yaml-Bastion.custadm_bastion_scope}"
  user_group         = "${terraform.workspace}-${each.value.user_name}-${local.yaml-Bastion.custadm_bastion_scope}"
  target_group       = "${terraform.workspace}-${each.value.user_name}-${local.yaml-Bastion.custadm_bastion_scope}"
  authorize_sessions = true
  is_recorded        = true
  subprotocols = [
    "RDP_CLIPBOARD_UP", "RDP_CLIPBOARD_DOWN", "RDP_PRINTER", "RDP_COM_PORT", "RDP_DRIVE", "RDP_SMARTCARD", "RDP_CLIPBOARD_FILE", "RDP_AUDIO_OUTPUT",
    "SSH_SHELL_SESSION", "SSH_REMOTE_COMMAND", "SSH_SCP_UP", "SSH_SCP_DOWN", "SSH_X11", "SSH_DIRECT_TCPIP", "SSH_REVERSE_TCPIP", "SSH_AUTH_AGENT",
    "SFTP_SESSION", "RDP", "VNC", "TELNET", "RLOGIN", "RAWTCPIP"
  ]
}
